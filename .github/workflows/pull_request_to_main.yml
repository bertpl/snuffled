name: Pull Request to Main
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  check_version_tag_does_not_exist:
    name: check version
    runs-on: ubuntu-latest
    steps:
      - name: Full checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch all history and tags

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Check tag
        run: |
          TAG="v$( uv version --short )"  
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "Tag ${TAG} already exists --> UNSAFE to merge to main"
            exit -1
          else
            echo "Tag ${TAG} does not exist --> safe to merge to main"
          fi


  test:
    runs-on: ubuntu-latest
    needs: check_version_tag_does_not_exist
    strategy:
      fail-fast: false
      matrix:
          python_version: ["3.10", "3.11", "3.12", "3.13"]
          dependency_resolution: ["lowest-direct", "highest"]
          include_all_extra_deps: ["false", "true"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/unit_test
        with:
          uv_version: ${{ vars.UV_VERSION }}
          python_version: ${{ matrix.python_version }}
          dependency_resolution: ${{ matrix.dependency_resolution }}
          include_all_extra_deps: ${{ matrix.include_all_extra_deps }}


  update-badges-and-splash:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/badges_and_splash
        with:
          uv_version: ${{ vars.UV_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}


  publish-to-dev:
    needs: test
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/publish_dev
        with:
          uv_version: ${{ vars.UV_VERSION }}
          dev_version: ${{ github.run_number }}
